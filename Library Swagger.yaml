swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /libmanage
tags:
  - name: book-controller
    description: Book Controller
  - name: book-issue-controller
    description: Book Issue Controller
  - name: library-user-controller
    description: Library User Controller
paths:
  /book/allbooks:
    get:
      tags:
        - book-controller
      summary: allBook
      operationId: allBookUsingGET
      produces:
        - /
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /book/bookById/{bid}:
    get:
      tags:
        - book-controller
      summary: bookById
      operationId: bookByIdUsingGET
      produces:
        - /
      parameters:
        - name: bid
          in: path
          description: bid
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Book'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /book/bookByTitle/{bTitle}:
    get:
      tags:
        - book-controller
      summary: bookByTitle
      operationId: bookByTitleUsingGET
      produces:
        - /
      parameters:
        - name: bTitle
          in: path
          description: bTitle
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Book'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /book/createbook:
    post:
      tags:
        - book-controller
      summary: createBook
      operationId: createBookUsingPOST
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: book
          description: book
          required: true
          schema:
            $ref: '#/definitions/Book'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Book'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /book/deletebook/{bid}:
    delete:
      tags:
        - book-controller
      summary: deleteBook
      operationId: deleteBookUsingDELETE
      produces:
        - /
      parameters:
        - name: bid
          in: path
          description: bid
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /book/updatebook:
    put:
      tags:
        - book-controller
      summary: updateBook
      operationId: updateBookUsingPUT
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: book
          description: book
          required: true
          schema:
            $ref: '#/definitions/Book'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /bookissue/addbookIssue:
    post:
      tags:
        - book-issue-controller
      summary: createBookIssue
      operationId: createBookIssueUsingPOST
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: bookIssue
          description: bookIssue
          required: true
          schema:
            $ref: '#/definitions/BookIssue'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BookIssue'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /bookissue/allbookissue:
    get:
      tags:
        - book-issue-controller
      summary: allBookIssue
      operationId: allBookIssueUsingGET
      produces:
        - /
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BookIssue'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /bookissue/bookIssueById/{isd}:
    get:
      tags:
        - book-issue-controller
      summary: bookIssueById
      operationId: bookIssueByIdUsingGET
      produces:
        - /
      parameters:
        - name: isd
          in: path
          description: isd
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BookIssue'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /bookissue/bookissuebyuid:
    get:
      tags:
        - book-issue-controller
      summary: BookIssuebyuid
      operationId: BookIssuebyuidUsingGET
      produces:
        - /
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BookIssue'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /bookissue/deletebookIssue/{isd}:
    delete:
      tags:
        - book-issue-controller
      summary: deletebookIssue
      operationId: deletebookIssueUsingDELETE
      produces:
        - /
      parameters:
        - name: isd
          in: path
          description: isd
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /bookissue/updatebookIssue:
    put:
      tags:
        - book-issue-controller
      summary: updateBookIssue
      operationId: updateBookIssueUsingPUT
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: bookIssue
          description: bookIssue
          required: true
          schema:
            $ref: '#/definitions/BookIssue'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /bookissue/updatebookReturn:
    put:
      tags:
        - book-issue-controller
      summary: updateBookReturn
      operationId: updateBookReturnUsingPUT
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: bookIssue
          description: bookIssue
          required: true
          schema:
            $ref: '#/definitions/BookIssue'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/addusers:
    post:
      tags:
        - library-user-controller
      summary: createUser
      operationId: createUserUsingPOST
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: libraryUser
          description: libraryUser
          required: true
          schema:
            $ref: '#/definitions/LibraryUser'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LibraryUser'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/allusers:
    get:
      tags:
        - library-user-controller
      summary: allUsers
      operationId: allUsersUsingGET
      produces:
        - /
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LibraryUser'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/deleteUser/{uid}:
    delete:
      tags:
        - library-user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      produces:
        - /
      parameters:
        - name: uid
          in: path
          description: uid
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /user/updateUser:
    put:
      tags:
        - library-user-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: libraryUser
          description: libraryUser
          required: true
          schema:
            $ref: '#/definitions/LibraryUser'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/userById/{uid}:
    get:
      tags:
        - library-user-controller
      summary: userById
      operationId: userByIdUsingGET
      produces:
        - /
      parameters:
        - name: uid
          in: path
          description: uid
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LibraryUser'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user/userByName/{uname}:
    get:
      tags:
        - library-user-controller
      summary: userById
      operationId: userByIdUsingGET_1
      produces:
        - /
      parameters:
        - name: uname
          in: path
          description: uname
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LibraryUser'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  Book:
    type: object
    properties:
      author:
        type: string
      book_Id:
        type: integer
        format: int32
      category:
        type: string
      publication:
        type: string
      publish_Date:
        type: string
        example: yyyy-mm-dd
      title:
        type: string
    title: Book
  BookIssue:
    type: object
    properties:
      actualReturnedDate:
        type: string
        example: yyyy-mm-dd
      book:
        $ref: '#/definitions/Book'
      issueDate:
        type: string
        example: yyyy-mm-dd
      issueNo:
        type: integer
        format: int32
      libuser:
        $ref: '#/definitions/LibraryUser'
      returnWithinDate:
        type: string
        example: yyyy-mm-dd
      status:
        type: string
    title: BookIssue
  LibraryUser:
    type: object
    properties:
      email:
        type: string
      gender:
        type: string
      name:
        type: string
      phno:
        type: integer
        format: int64
      userid:
        type: integer
        format: int32
    title: LibraryUser
